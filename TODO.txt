6/01/2023
- Define a data race

- How to go from traces to constraints?
  - How the partial order is created
  - Write Read Consistency
  
- How did they figure out lsa\mhb removes all bogus witnesses

- What is a concrete witness, how do they confirm conrete witnesses

- Where do they obtain all SAT formulas

- What qualifies as a "medium trace"

- Proof sketch of maximality

- Memory Models

6/15/2023
- Read Second Paper
- Try out Z3 tutorial
- Why are not all the data races bogus?
  - Based on sequential consistency, we know that anything that doesn't follow it is bogus and thus we only eliminate bogus warnings 
- o -> o' in encoding is used to indicate value at next step
- All benchmarks are publicly available
- LSA: storing the history of all locks that were acquired or released to get to a certain point - https://www.cs.utexas.edu/~kahlon/papers/cav05.pdf

6/21/2023
- Branch event, what is the problem with the control flow for T2e1?
- Read event, why does e2 matter, can it read garbage data?
- What is F, why do the mappings matter? What do the symbolic values do in this case?
- Is there a P' that can generate T' but not T
- Is prefix closedness helping for data race, T1ab vs T1abT2
- What does paper do for values that don't exist in the formula?

Next steps:
Answer questions
Play around with RVPredict
Watch video on newer tool

6/31/2023

7/5/2023
Both - Read paper: https://www.comp.nus.edu.sg/~umathur/papers/shb-oopsla2018.pdf
Both - Think about going forward using this tool and building off RVPredict ^
Alan - Ask Umang if there is value to reading the paper/if this is the technique we want instead of RVPredict
Alan - Figure out the breakdown of runtime in RVPredict
David - See traces from RVPredict
Both (probably hardest) - See what formulas are being solved
Both (required) - (use install.sh in epredict branch in this repo:https://github.com/owolabileg/my-rv-predict) Build RVPredict from source

Next steps:
- Modify the scripts in the epredict repo to automate the runs of RVPredict on the same three projects and their SHAs when running all tests (don't run test classes or test methods). Create a pull request for your modifications to the script; ideally, you'd pass in arguments instead of commenting things out. - 
@Alan Han
- Find new multi-threaded projects for which the latest version uses JUnit 4 and for which we can successfully run RVPredict on those latest versions. You can start with latest versions of projects in this file. Ideally, you'd write a script to automate this process, so that we can use that script to find other projects in the future. Create a pull request for that script as well as the project and versions that you find.  - 
@David Zhu
